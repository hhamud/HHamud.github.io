#+title: Build
#+AUTHOR: Hamza Hamud
#+EMAIL: self@hamzahamud.com
#+DATE: [2024-01-10 Thu]
#+DESCRIPTION: Emacs Lisp configuration for blog publishing
#+KEYWORDS: emacs, blog, publishing, org-mode
#+LANGUAGE: en
#+OPTIONS: toc:nil
#+PROPERTY: header-args :tangle build.el


Load the publishing system
#+begin_src emacs-lisp
(require 'package)
(setq package-user-dir (expand-file-name "./.packages"))
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("elpa" . "https://elpa.gnu.org/packages/")))
#+end_src


Initialise the package system
#+begin_src emacs-lisp
(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))
#+end_src

Install dependencies
#+begin_src emacs-lisp
(package-install 'htmlize)
#+end_src


Load the publishing system
#+begin_src emacs-lisp
(require 'ox-publish)
#+end_src


Customise the HTML output by using our own scripts and styles without showing our validations links
#+begin_src emacs-lisp
(setq org-html-validation-link nil
      org-html-head-include-scripts nil
      org-html-head-include-default-style nil
      org-html-head "<link rel=\"stylesheet\" href=\"https://cdn.simplecss.org/simple.min.css\" />")
#+end_src



This function was created as a wrapper around ~org-html-publish-to-html~ to filter out any files that do not have the tag =#+SELECT_TAGS: publish=.
#+begin_src emacs-lisp
(defun my/org-publish (plist filename pub-dir)
  "Publish the file only if it contains the line '#+SELECT_TAGS: publish'."
  (with-temp-buffer
    (insert-file-contents filename)
    (goto-char (point-min))
    (if (re-search-forward "^#\\+SELECT_TAGS:.*\\bpublish\\b.*$" nil t)
        (org-html-publish-to-html plist filename pub-dir)
      (message "Skipping file not marked for publishing: %s" filename))))

#+end_src

Set the base directory for the files to be published from.
#+begin_src emacs-lisp
(setq org-base-directory "~/Documents/org/info")
#+end_src

Define the publishing project
- Include a table of contents
- Don't include author name
- Don't Include Emacs and Org versions in footer
- Don't include section numbers
- Don't include time stamp in file
#+begin_src emacs-lisp
(setq org-publish-project-alist
      (list
       (list "org-site:main"
             :recursive nil
             :base-directory org-base-directory
             :publishing-function 'my/org-publish
             :publishing-directory "./public"
             :with-author nil
             :with-creator nil
             :with-toc t
             :section-numbers nil
             :time-stamp-file nil
             )))
#+end_src

Generate the site output
#+begin_src emacs-lisp
(org-publish-all t)
#+end_src


